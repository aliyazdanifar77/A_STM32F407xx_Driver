
A_STM32F407xx_Driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000081c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009c4  080009cc  000109cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009c4  080009c4  000109cc  2**0
                  CONTENTS
  4 .ARM          00000000  080009c4  080009c4  000109cc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009c4  080009cc  000109cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009c4  080009c4  000109c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009c8  080009c8  000109c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000109cc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000109cc  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000129e  00000000  00000000  000109fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000374  00000000  00000000  00011c9a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00012010  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000a0  00000000  00000000  000120d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001dad  00000000  00000000  00012178  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000fb9  00000000  00000000  00013f25  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008860  00000000  00000000  00014ede  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001d73e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000290  00000000  00000000  0001d794  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080009ac 	.word	0x080009ac

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080009ac 	.word	0x080009ac

080001e8 <delay>:
 */
# include "A_gpio_f407_drv.h"
# include <string.h>

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
for(uint32_t i=0 ; i<=100000 ; i++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr
 8000210:	000186a0 	.word	0x000186a0

08000214 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b082      	sub	sp, #8
 8000218:	af00      	add	r7, sp, #0
	uint8_t ali;
	GPIO_Toggle_PIN(GPIOA,0);
 800021a:	2100      	movs	r1, #0
 800021c:	4806      	ldr	r0, [pc, #24]	; (8000238 <EXTI15_10_IRQHandler+0x24>)
 800021e:	f000 fb6b 	bl	80008f8 <GPIO_Toggle_PIN>
	ali=Event_Pending(pin_10);
 8000222:	200a      	movs	r0, #10
 8000224:	f000 fb7e 	bl	8000924 <Event_Pending>
 8000228:	4603      	mov	r3, r0
 800022a:	71fb      	strb	r3, [r7, #7]
	//GPIO_IRQHandler(pin_6);
	delay();
 800022c:	f7ff ffdc 	bl	80001e8 <delay>


}
 8000230:	bf00      	nop
 8000232:	3708      	adds	r7, #8
 8000234:	46bd      	mov	sp, r7
 8000236:	bd80      	pop	{r7, pc}
 8000238:	40020000 	.word	0x40020000

0800023c <main>:

int main(void)
{
 800023c:	b580      	push	{r7, lr}
 800023e:	b08a      	sub	sp, #40	; 0x28
 8000240:	af00      	add	r7, sp, #0
	GPIO_Clock_CONTROL(GPIOA,ON);
 8000242:	2101      	movs	r1, #1
 8000244:	481d      	ldr	r0, [pc, #116]	; (80002bc <main+0x80>)
 8000246:	f000 f867 	bl	8000318 <GPIO_Clock_CONTROL>
//	GPIO_Clock_CONTROL(GPIOG,ON);
	GPIO_Clock_CONTROL(GPIOC,ON);
 800024a:	2101      	movs	r1, #1
 800024c:	481c      	ldr	r0, [pc, #112]	; (80002c0 <main+0x84>)
 800024e:	f000 f863 	bl	8000318 <GPIO_Clock_CONTROL>

	GPIO_HANDLER gpio_handler , gpio_1_handler , gpio_2_handler;

	memset(&gpio_handler,0,sizeof(gpio_handler));
 8000252:	f107 031c 	add.w	r3, r7, #28
 8000256:	220c      	movs	r2, #12
 8000258:	2100      	movs	r1, #0
 800025a:	4618      	mov	r0, r3
 800025c:	f000 fb9e 	bl	800099c <memset>
	memset(&gpio_1_handler,0,sizeof(gpio_1_handler));
 8000260:	f107 0310 	add.w	r3, r7, #16
 8000264:	220c      	movs	r2, #12
 8000266:	2100      	movs	r1, #0
 8000268:	4618      	mov	r0, r3
 800026a:	f000 fb97 	bl	800099c <memset>
//	memset(&gpio_2_handler,0,sizeof(gpio_2_handler));

	gpio_handler.pGPIOx=GPIOA;
 800026e:	4b13      	ldr	r3, [pc, #76]	; (80002bc <main+0x80>)
 8000270:	61fb      	str	r3, [r7, #28]
	gpio_handler.GPIO_PIN_CONF.Pin=pin_0;
 8000272:	2300      	movs	r3, #0
 8000274:	f887 3020 	strb.w	r3, [r7, #32]
	gpio_handler.GPIO_PIN_CONF.Mode=GPIO_MODE_OUTPUT_PP;
 8000278:	23fe      	movs	r3, #254	; 0xfe
 800027a:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	gpio_handler.GPIO_PIN_CONF.Pull=GPIO_PIN_NO_PD_PU;
 800027e:	2300      	movs	r3, #0
 8000280:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
	gpio_handler.GPIO_PIN_CONF.Speed=GPIO_SPEED_LOW;
 8000284:	2300      	movs	r3, #0
 8000286:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23


	gpio_1_handler.pGPIOx=GPIOC;
 800028a:	4b0d      	ldr	r3, [pc, #52]	; (80002c0 <main+0x84>)
 800028c:	613b      	str	r3, [r7, #16]
	gpio_1_handler.GPIO_PIN_CONF.Pin=pin_10;
 800028e:	230a      	movs	r3, #10
 8000290:	753b      	strb	r3, [r7, #20]
	gpio_1_handler.GPIO_PIN_CONF.Mode=GPIO_MODE_EVT_FT;
 8000292:	2307      	movs	r3, #7
 8000294:	757b      	strb	r3, [r7, #21]
	gpio_1_handler.GPIO_PIN_CONF.Pull=GPIO_PIN_PULL_UP;
 8000296:	2301      	movs	r3, #1
 8000298:	75bb      	strb	r3, [r7, #22]





	GPIO_Init(&gpio_handler);
 800029a:	f107 031c 	add.w	r3, r7, #28
 800029e:	4618      	mov	r0, r3
 80002a0:	f000 f86a 	bl	8000378 <GPIO_Init>
	GPIO_Init(&gpio_1_handler);
 80002a4:	f107 0310 	add.w	r3, r7, #16
 80002a8:	4618      	mov	r0, r3
 80002aa:	f000 f865 	bl	8000378 <GPIO_Init>

	//SOFT_IRQ_Request(pin_6);
	while(1)

	{
		if(Event_Pending(pin_10)==1)
 80002ae:	200a      	movs	r0, #10
 80002b0:	f000 fb38 	bl	8000924 <Event_Pending>
 80002b4:	4603      	mov	r3, r0
 80002b6:	2b01      	cmp	r3, #1
 80002b8:	d1f9      	bne.n	80002ae <main+0x72>
			while(1);
 80002ba:	e7fe      	b.n	80002ba <main+0x7e>
 80002bc:	40020000 	.word	0x40020000
 80002c0:	40020800 	.word	0x40020800

080002c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c4:	480d      	ldr	r0, [pc, #52]	; (80002fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002cc:	480c      	ldr	r0, [pc, #48]	; (8000300 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ce:	490d      	ldr	r1, [pc, #52]	; (8000304 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d0:	4a0d      	ldr	r2, [pc, #52]	; (8000308 <LoopForever+0xe>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d4:	e002      	b.n	80002dc <LoopCopyDataInit>

080002d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002da:	3304      	adds	r3, #4

080002dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e0:	d3f9      	bcc.n	80002d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e2:	4a0a      	ldr	r2, [pc, #40]	; (800030c <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e4:	4c0a      	ldr	r4, [pc, #40]	; (8000310 <LoopForever+0x16>)
  movs r3, #0
 80002e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e8:	e001      	b.n	80002ee <LoopFillZerobss>

080002ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002ec:	3204      	adds	r2, #4

080002ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f0:	d3fb      	bcc.n	80002ea <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002f2:	f000 fb2f 	bl	8000954 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f6:	f7ff ffa1 	bl	800023c <main>

080002fa <LoopForever>:

LoopForever:
    b LoopForever
 80002fa:	e7fe      	b.n	80002fa <LoopForever>
  ldr   r0, =_estack
 80002fc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000300:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000304:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000308:	080009cc 	.word	0x080009cc
  ldr r2, =_sbss
 800030c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000310:	2000001c 	.word	0x2000001c

08000314 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000314:	e7fe      	b.n	8000314 <ADC_IRQHandler>
	...

08000318 <GPIO_Clock_CONTROL>:
 *
 * @Note
 */

void GPIO_Clock_CONTROL(GPIO_REG_STR *pdata , uint8_t EnDi)
{
 8000318:	b480      	push	{r7}
 800031a:	b083      	sub	sp, #12
 800031c:	af00      	add	r7, sp, #0
 800031e:	6078      	str	r0, [r7, #4]
 8000320:	460b      	mov	r3, r1
 8000322:	70fb      	strb	r3, [r7, #3]
	if(EnDi==1)
 8000324:	78fb      	ldrb	r3, [r7, #3]
 8000326:	2b01      	cmp	r3, #1
 8000328:	d10e      	bne.n	8000348 <GPIO_Clock_CONTROL+0x30>
		GPIO_Clock_CONTROL_EN(pdata);
 800032a:	4b12      	ldr	r3, [pc, #72]	; (8000374 <GPIO_Clock_CONTROL+0x5c>)
 800032c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	f103 433f 	add.w	r3, r3, #3204448256	; 0xbf000000
 8000334:	f503 037e 	add.w	r3, r3, #16646144	; 0xfe0000
 8000338:	0a9b      	lsrs	r3, r3, #10
 800033a:	2101      	movs	r1, #1
 800033c:	fa01 f303 	lsl.w	r3, r1, r3
 8000340:	490c      	ldr	r1, [pc, #48]	; (8000374 <GPIO_Clock_CONTROL+0x5c>)
 8000342:	4313      	orrs	r3, r2
 8000344:	630b      	str	r3, [r1, #48]	; 0x30
	else
		GPIO_Clock_CONTROL_DI(pdata);
}
 8000346:	e00e      	b.n	8000366 <GPIO_Clock_CONTROL+0x4e>
		GPIO_Clock_CONTROL_DI(pdata);
 8000348:	4b0a      	ldr	r3, [pc, #40]	; (8000374 <GPIO_Clock_CONTROL+0x5c>)
 800034a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	f103 433f 	add.w	r3, r3, #3204448256	; 0xbf000000
 8000352:	f503 037e 	add.w	r3, r3, #16646144	; 0xfe0000
 8000356:	0a9b      	lsrs	r3, r3, #10
 8000358:	2101      	movs	r1, #1
 800035a:	fa01 f303 	lsl.w	r3, r1, r3
 800035e:	43db      	mvns	r3, r3
 8000360:	4904      	ldr	r1, [pc, #16]	; (8000374 <GPIO_Clock_CONTROL+0x5c>)
 8000362:	4013      	ands	r3, r2
 8000364:	630b      	str	r3, [r1, #48]	; 0x30
}
 8000366:	bf00      	nop
 8000368:	370c      	adds	r7, #12
 800036a:	46bd      	mov	sp, r7
 800036c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000370:	4770      	bx	lr
 8000372:	bf00      	nop
 8000374:	40023800 	.word	0x40023800

08000378 <GPIO_Init>:
 * @Note
 */


void GPIO_Init(GPIO_HANDLER *pdata)
{
 8000378:	b480      	push	{r7}
 800037a:	b085      	sub	sp, #20
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]

	// configuring mode of pin not interrupt mode
	if(pdata->GPIO_PIN_CONF.Mode <= GPIO_MODE_ANALOG)
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	f993 3005 	ldrsb.w	r3, [r3, #5]
 8000386:	2b03      	cmp	r3, #3
 8000388:	dc68      	bgt.n	800045c <GPIO_Init+0xe4>
	{
		if(pdata->GPIO_PIN_CONF.Mode <= GPIO_MODE_OUTPUT_OD)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	f993 3005 	ldrsb.w	r3, [r3, #5]
 8000390:	2b00      	cmp	r3, #0
 8000392:	da43      	bge.n	800041c <GPIO_Init+0xa4>
		{


			pdata->pGPIOx->MODER &= ~(0x3<<pdata->GPIO_PIN_CONF.Pin);
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	681a      	ldr	r2, [r3, #0]
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	791b      	ldrb	r3, [r3, #4]
 800039e:	4619      	mov	r1, r3
 80003a0:	2303      	movs	r3, #3
 80003a2:	408b      	lsls	r3, r1
 80003a4:	43db      	mvns	r3, r3
 80003a6:	4619      	mov	r1, r3
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	400a      	ands	r2, r1
 80003ae:	601a      	str	r2, [r3, #0]
			pdata->pGPIOx->MODER |= (0x1<<(2 * pdata->GPIO_PIN_CONF.Pin));
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	681a      	ldr	r2, [r3, #0]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	791b      	ldrb	r3, [r3, #4]
 80003ba:	005b      	lsls	r3, r3, #1
 80003bc:	2101      	movs	r1, #1
 80003be:	fa01 f303 	lsl.w	r3, r1, r3
 80003c2:	4619      	mov	r1, r3
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	430a      	orrs	r2, r1
 80003ca:	601a      	str	r2, [r3, #0]


			pdata->GPIO_PIN_CONF.Mode +=(uint8_t )2;
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	f993 3005 	ldrsb.w	r3, [r3, #5]
 80003d2:	b2db      	uxtb	r3, r3
 80003d4:	3302      	adds	r3, #2
 80003d6:	b2db      	uxtb	r3, r3
 80003d8:	b25a      	sxtb	r2, r3
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	715a      	strb	r2, [r3, #5]
			pdata->pGPIOx->OTYPER &= ~(0x1 <<pdata->GPIO_PIN_CONF.Pin);
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	685a      	ldr	r2, [r3, #4]
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	791b      	ldrb	r3, [r3, #4]
 80003e8:	4619      	mov	r1, r3
 80003ea:	2301      	movs	r3, #1
 80003ec:	408b      	lsls	r3, r1
 80003ee:	43db      	mvns	r3, r3
 80003f0:	4619      	mov	r1, r3
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	400a      	ands	r2, r1
 80003f8:	605a      	str	r2, [r3, #4]
			pdata->pGPIOx->OTYPER |= (pdata->GPIO_PIN_CONF.Mode<<pdata->GPIO_PIN_CONF.Pin);
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	685a      	ldr	r2, [r3, #4]
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	f993 3005 	ldrsb.w	r3, [r3, #5]
 8000406:	4619      	mov	r1, r3
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	791b      	ldrb	r3, [r3, #4]
 800040c:	fa01 f303 	lsl.w	r3, r1, r3
 8000410:	4619      	mov	r1, r3
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	430a      	orrs	r2, r1
 8000418:	605a      	str	r2, [r3, #4]
 800041a:	e1e1      	b.n	80007e0 <GPIO_Init+0x468>
		}
		else
		{

			pdata->pGPIOx->MODER &= ~(0x3<<pdata->GPIO_PIN_CONF.Pin);
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	681a      	ldr	r2, [r3, #0]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	791b      	ldrb	r3, [r3, #4]
 8000426:	4619      	mov	r1, r3
 8000428:	2303      	movs	r3, #3
 800042a:	408b      	lsls	r3, r1
 800042c:	43db      	mvns	r3, r3
 800042e:	4619      	mov	r1, r3
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	400a      	ands	r2, r1
 8000436:	601a      	str	r2, [r3, #0]
			pdata->pGPIOx->MODER |= (pdata->GPIO_PIN_CONF.Mode<<(2 * pdata->GPIO_PIN_CONF.Pin));
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	681a      	ldr	r2, [r3, #0]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	f993 3005 	ldrsb.w	r3, [r3, #5]
 8000444:	4619      	mov	r1, r3
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	791b      	ldrb	r3, [r3, #4]
 800044a:	005b      	lsls	r3, r3, #1
 800044c:	fa01 f303 	lsl.w	r3, r1, r3
 8000450:	4619      	mov	r1, r3
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	430a      	orrs	r2, r1
 8000458:	601a      	str	r2, [r3, #0]
 800045a:	e1c1      	b.n	80007e0 <GPIO_Init+0x468>

	}
	// else interrupt/event mode configuration <<<<<peripheral side>>>>>
	else
	{
		if(pdata->GPIO_PIN_CONF.Mode >= GPIO_MODE_EVT_FT)
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	f993 3005 	ldrsb.w	r3, [r3, #5]
 8000462:	2b06      	cmp	r3, #6
 8000464:	f340 80d0 	ble.w	8000608 <GPIO_Init+0x290>
		{

			// 1. configuration of kind of trigger
			if(pdata->GPIO_PIN_CONF.Mode == GPIO_MODE_EVT_FT)
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	f993 3005 	ldrsb.w	r3, [r3, #5]
 800046e:	2b07      	cmp	r3, #7
 8000470:	d117      	bne.n	80004a2 <GPIO_Init+0x12a>
			{
				EXTI->FTSR |= (1 << pdata->GPIO_PIN_CONF.Pin);
 8000472:	4b82      	ldr	r3, [pc, #520]	; (800067c <GPIO_Init+0x304>)
 8000474:	68db      	ldr	r3, [r3, #12]
 8000476:	687a      	ldr	r2, [r7, #4]
 8000478:	7912      	ldrb	r2, [r2, #4]
 800047a:	4611      	mov	r1, r2
 800047c:	2201      	movs	r2, #1
 800047e:	408a      	lsls	r2, r1
 8000480:	4611      	mov	r1, r2
 8000482:	4a7e      	ldr	r2, [pc, #504]	; (800067c <GPIO_Init+0x304>)
 8000484:	430b      	orrs	r3, r1
 8000486:	60d3      	str	r3, [r2, #12]
				EXTI->RTSR &= ~(1<< pdata->GPIO_PIN_CONF.Pin);
 8000488:	4b7c      	ldr	r3, [pc, #496]	; (800067c <GPIO_Init+0x304>)
 800048a:	689b      	ldr	r3, [r3, #8]
 800048c:	687a      	ldr	r2, [r7, #4]
 800048e:	7912      	ldrb	r2, [r2, #4]
 8000490:	4611      	mov	r1, r2
 8000492:	2201      	movs	r2, #1
 8000494:	408a      	lsls	r2, r1
 8000496:	43d2      	mvns	r2, r2
 8000498:	4611      	mov	r1, r2
 800049a:	4a78      	ldr	r2, [pc, #480]	; (800067c <GPIO_Init+0x304>)
 800049c:	400b      	ands	r3, r1
 800049e:	6093      	str	r3, [r2, #8]
 80004a0:	e032      	b.n	8000508 <GPIO_Init+0x190>
			}
			else if(pdata->GPIO_PIN_CONF.Mode == GPIO_MODE_EVT_RT)
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	f993 3005 	ldrsb.w	r3, [r3, #5]
 80004a8:	2b08      	cmp	r3, #8
 80004aa:	d117      	bne.n	80004dc <GPIO_Init+0x164>
			{
				EXTI->RTSR |= (1 << pdata->GPIO_PIN_CONF.Pin);
 80004ac:	4b73      	ldr	r3, [pc, #460]	; (800067c <GPIO_Init+0x304>)
 80004ae:	689b      	ldr	r3, [r3, #8]
 80004b0:	687a      	ldr	r2, [r7, #4]
 80004b2:	7912      	ldrb	r2, [r2, #4]
 80004b4:	4611      	mov	r1, r2
 80004b6:	2201      	movs	r2, #1
 80004b8:	408a      	lsls	r2, r1
 80004ba:	4611      	mov	r1, r2
 80004bc:	4a6f      	ldr	r2, [pc, #444]	; (800067c <GPIO_Init+0x304>)
 80004be:	430b      	orrs	r3, r1
 80004c0:	6093      	str	r3, [r2, #8]
				EXTI->FTSR &= ~(1<< pdata->GPIO_PIN_CONF.Pin);
 80004c2:	4b6e      	ldr	r3, [pc, #440]	; (800067c <GPIO_Init+0x304>)
 80004c4:	68db      	ldr	r3, [r3, #12]
 80004c6:	687a      	ldr	r2, [r7, #4]
 80004c8:	7912      	ldrb	r2, [r2, #4]
 80004ca:	4611      	mov	r1, r2
 80004cc:	2201      	movs	r2, #1
 80004ce:	408a      	lsls	r2, r1
 80004d0:	43d2      	mvns	r2, r2
 80004d2:	4611      	mov	r1, r2
 80004d4:	4a69      	ldr	r2, [pc, #420]	; (800067c <GPIO_Init+0x304>)
 80004d6:	400b      	ands	r3, r1
 80004d8:	60d3      	str	r3, [r2, #12]
 80004da:	e015      	b.n	8000508 <GPIO_Init+0x190>
			}
			else
			{
				EXTI->RTSR |= (1 << pdata->GPIO_PIN_CONF.Pin);
 80004dc:	4b67      	ldr	r3, [pc, #412]	; (800067c <GPIO_Init+0x304>)
 80004de:	689b      	ldr	r3, [r3, #8]
 80004e0:	687a      	ldr	r2, [r7, #4]
 80004e2:	7912      	ldrb	r2, [r2, #4]
 80004e4:	4611      	mov	r1, r2
 80004e6:	2201      	movs	r2, #1
 80004e8:	408a      	lsls	r2, r1
 80004ea:	4611      	mov	r1, r2
 80004ec:	4a63      	ldr	r2, [pc, #396]	; (800067c <GPIO_Init+0x304>)
 80004ee:	430b      	orrs	r3, r1
 80004f0:	6093      	str	r3, [r2, #8]
				EXTI->FTSR |= (1<< pdata->GPIO_PIN_CONF.Pin);
 80004f2:	4b62      	ldr	r3, [pc, #392]	; (800067c <GPIO_Init+0x304>)
 80004f4:	68db      	ldr	r3, [r3, #12]
 80004f6:	687a      	ldr	r2, [r7, #4]
 80004f8:	7912      	ldrb	r2, [r2, #4]
 80004fa:	4611      	mov	r1, r2
 80004fc:	2201      	movs	r2, #1
 80004fe:	408a      	lsls	r2, r1
 8000500:	4611      	mov	r1, r2
 8000502:	4a5e      	ldr	r2, [pc, #376]	; (800067c <GPIO_Init+0x304>)
 8000504:	430b      	orrs	r3, r1
 8000506:	60d3      	str	r3, [r2, #12]
			}

			// 2. Setting the SYSCFG registers for choosing pin
			uint8_t portcode = Gpio_Port_Code(pdata->pGPIOx);
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	4a5c      	ldr	r2, [pc, #368]	; (8000680 <GPIO_Init+0x308>)
 800050e:	4293      	cmp	r3, r2
 8000510:	d039      	beq.n	8000586 <GPIO_Init+0x20e>
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	4a5b      	ldr	r2, [pc, #364]	; (8000684 <GPIO_Init+0x30c>)
 8000518:	4293      	cmp	r3, r2
 800051a:	d032      	beq.n	8000582 <GPIO_Init+0x20a>
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	4a59      	ldr	r2, [pc, #356]	; (8000688 <GPIO_Init+0x310>)
 8000522:	4293      	cmp	r3, r2
 8000524:	d02b      	beq.n	800057e <GPIO_Init+0x206>
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	4a58      	ldr	r2, [pc, #352]	; (800068c <GPIO_Init+0x314>)
 800052c:	4293      	cmp	r3, r2
 800052e:	d024      	beq.n	800057a <GPIO_Init+0x202>
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	4a56      	ldr	r2, [pc, #344]	; (8000690 <GPIO_Init+0x318>)
 8000536:	4293      	cmp	r3, r2
 8000538:	d01d      	beq.n	8000576 <GPIO_Init+0x1fe>
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	4a55      	ldr	r2, [pc, #340]	; (8000694 <GPIO_Init+0x31c>)
 8000540:	4293      	cmp	r3, r2
 8000542:	d016      	beq.n	8000572 <GPIO_Init+0x1fa>
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	4a53      	ldr	r2, [pc, #332]	; (8000698 <GPIO_Init+0x320>)
 800054a:	4293      	cmp	r3, r2
 800054c:	d00f      	beq.n	800056e <GPIO_Init+0x1f6>
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	4a52      	ldr	r2, [pc, #328]	; (800069c <GPIO_Init+0x324>)
 8000554:	4293      	cmp	r3, r2
 8000556:	d008      	beq.n	800056a <GPIO_Init+0x1f2>
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	4a50      	ldr	r2, [pc, #320]	; (80006a0 <GPIO_Init+0x328>)
 800055e:	4293      	cmp	r3, r2
 8000560:	d101      	bne.n	8000566 <GPIO_Init+0x1ee>
 8000562:	2308      	movs	r3, #8
 8000564:	e010      	b.n	8000588 <GPIO_Init+0x210>
 8000566:	2300      	movs	r3, #0
 8000568:	e00e      	b.n	8000588 <GPIO_Init+0x210>
 800056a:	2307      	movs	r3, #7
 800056c:	e00c      	b.n	8000588 <GPIO_Init+0x210>
 800056e:	2306      	movs	r3, #6
 8000570:	e00a      	b.n	8000588 <GPIO_Init+0x210>
 8000572:	2305      	movs	r3, #5
 8000574:	e008      	b.n	8000588 <GPIO_Init+0x210>
 8000576:	2304      	movs	r3, #4
 8000578:	e006      	b.n	8000588 <GPIO_Init+0x210>
 800057a:	2303      	movs	r3, #3
 800057c:	e004      	b.n	8000588 <GPIO_Init+0x210>
 800057e:	2302      	movs	r3, #2
 8000580:	e002      	b.n	8000588 <GPIO_Init+0x210>
 8000582:	2301      	movs	r3, #1
 8000584:	e000      	b.n	8000588 <GPIO_Init+0x210>
 8000586:	2300      	movs	r3, #0
 8000588:	73bb      	strb	r3, [r7, #14]
			SYSCFG_CLK_EN();
 800058a:	4b46      	ldr	r3, [pc, #280]	; (80006a4 <GPIO_Init+0x32c>)
 800058c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800058e:	4a45      	ldr	r2, [pc, #276]	; (80006a4 <GPIO_Init+0x32c>)
 8000590:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000594:	6453      	str	r3, [r2, #68]	; 0x44
			SYSCFG->EXTICR[((pdata->GPIO_PIN_CONF.Pin)/4)] &= ~(0xF << 4 * ((pdata->GPIO_PIN_CONF.Pin)% 4));
 8000596:	4a44      	ldr	r2, [pc, #272]	; (80006a8 <GPIO_Init+0x330>)
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	791b      	ldrb	r3, [r3, #4]
 800059c:	089b      	lsrs	r3, r3, #2
 800059e:	b2d8      	uxtb	r0, r3
 80005a0:	4603      	mov	r3, r0
 80005a2:	3302      	adds	r3, #2
 80005a4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80005a8:	687a      	ldr	r2, [r7, #4]
 80005aa:	7912      	ldrb	r2, [r2, #4]
 80005ac:	f002 0203 	and.w	r2, r2, #3
 80005b0:	0092      	lsls	r2, r2, #2
 80005b2:	210f      	movs	r1, #15
 80005b4:	fa01 f202 	lsl.w	r2, r1, r2
 80005b8:	43d2      	mvns	r2, r2
 80005ba:	493b      	ldr	r1, [pc, #236]	; (80006a8 <GPIO_Init+0x330>)
 80005bc:	401a      	ands	r2, r3
 80005be:	1c83      	adds	r3, r0, #2
 80005c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			SYSCFG->EXTICR[((pdata->GPIO_PIN_CONF.Pin)/4)] |= (portcode<<(4 * (pdata->GPIO_PIN_CONF.Pin % 4)));
 80005c4:	4a38      	ldr	r2, [pc, #224]	; (80006a8 <GPIO_Init+0x330>)
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	791b      	ldrb	r3, [r3, #4]
 80005ca:	089b      	lsrs	r3, r3, #2
 80005cc:	b2d8      	uxtb	r0, r3
 80005ce:	4603      	mov	r3, r0
 80005d0:	3302      	adds	r3, #2
 80005d2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80005d6:	7bb9      	ldrb	r1, [r7, #14]
 80005d8:	687a      	ldr	r2, [r7, #4]
 80005da:	7912      	ldrb	r2, [r2, #4]
 80005dc:	f002 0203 	and.w	r2, r2, #3
 80005e0:	0092      	lsls	r2, r2, #2
 80005e2:	fa01 f202 	lsl.w	r2, r1, r2
 80005e6:	4930      	ldr	r1, [pc, #192]	; (80006a8 <GPIO_Init+0x330>)
 80005e8:	431a      	orrs	r2, r3
 80005ea:	1c83      	adds	r3, r0, #2
 80005ec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

			// 3. Enabling EXTI block for event mode
			EXTI->EMR |= (1<<pdata->GPIO_PIN_CONF.Pin);
 80005f0:	4b22      	ldr	r3, [pc, #136]	; (800067c <GPIO_Init+0x304>)
 80005f2:	685b      	ldr	r3, [r3, #4]
 80005f4:	687a      	ldr	r2, [r7, #4]
 80005f6:	7912      	ldrb	r2, [r2, #4]
 80005f8:	4611      	mov	r1, r2
 80005fa:	2201      	movs	r2, #1
 80005fc:	408a      	lsls	r2, r1
 80005fe:	4611      	mov	r1, r2
 8000600:	4a1e      	ldr	r2, [pc, #120]	; (800067c <GPIO_Init+0x304>)
 8000602:	430b      	orrs	r3, r1
 8000604:	6053      	str	r3, [r2, #4]
 8000606:	e0eb      	b.n	80007e0 <GPIO_Init+0x468>

		else
		{

			// 1. configuration of kind of trigger
				if(pdata->GPIO_PIN_CONF.Mode == GPIO_MODE_IT_FT	)
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	f993 3005 	ldrsb.w	r3, [r3, #5]
 800060e:	2b04      	cmp	r3, #4
 8000610:	d117      	bne.n	8000642 <GPIO_Init+0x2ca>
				{
					EXTI->FTSR |= (1 << pdata->GPIO_PIN_CONF.Pin);
 8000612:	4b1a      	ldr	r3, [pc, #104]	; (800067c <GPIO_Init+0x304>)
 8000614:	68db      	ldr	r3, [r3, #12]
 8000616:	687a      	ldr	r2, [r7, #4]
 8000618:	7912      	ldrb	r2, [r2, #4]
 800061a:	4611      	mov	r1, r2
 800061c:	2201      	movs	r2, #1
 800061e:	408a      	lsls	r2, r1
 8000620:	4611      	mov	r1, r2
 8000622:	4a16      	ldr	r2, [pc, #88]	; (800067c <GPIO_Init+0x304>)
 8000624:	430b      	orrs	r3, r1
 8000626:	60d3      	str	r3, [r2, #12]
					EXTI->RTSR &= ~(1<< pdata->GPIO_PIN_CONF.Pin);
 8000628:	4b14      	ldr	r3, [pc, #80]	; (800067c <GPIO_Init+0x304>)
 800062a:	689b      	ldr	r3, [r3, #8]
 800062c:	687a      	ldr	r2, [r7, #4]
 800062e:	7912      	ldrb	r2, [r2, #4]
 8000630:	4611      	mov	r1, r2
 8000632:	2201      	movs	r2, #1
 8000634:	408a      	lsls	r2, r1
 8000636:	43d2      	mvns	r2, r2
 8000638:	4611      	mov	r1, r2
 800063a:	4a10      	ldr	r2, [pc, #64]	; (800067c <GPIO_Init+0x304>)
 800063c:	400b      	ands	r3, r1
 800063e:	6093      	str	r3, [r2, #8]
 8000640:	e04f      	b.n	80006e2 <GPIO_Init+0x36a>
				}
				else if(pdata->GPIO_PIN_CONF.Mode == GPIO_MODE_IT_RT)
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	f993 3005 	ldrsb.w	r3, [r3, #5]
 8000648:	2b05      	cmp	r3, #5
 800064a:	d12f      	bne.n	80006ac <GPIO_Init+0x334>
				{
					EXTI->RTSR |= (1 << pdata->GPIO_PIN_CONF.Pin);
 800064c:	4b0b      	ldr	r3, [pc, #44]	; (800067c <GPIO_Init+0x304>)
 800064e:	689b      	ldr	r3, [r3, #8]
 8000650:	687a      	ldr	r2, [r7, #4]
 8000652:	7912      	ldrb	r2, [r2, #4]
 8000654:	4611      	mov	r1, r2
 8000656:	2201      	movs	r2, #1
 8000658:	408a      	lsls	r2, r1
 800065a:	4611      	mov	r1, r2
 800065c:	4a07      	ldr	r2, [pc, #28]	; (800067c <GPIO_Init+0x304>)
 800065e:	430b      	orrs	r3, r1
 8000660:	6093      	str	r3, [r2, #8]
					EXTI->FTSR &= ~(1<< pdata->GPIO_PIN_CONF.Pin);
 8000662:	4b06      	ldr	r3, [pc, #24]	; (800067c <GPIO_Init+0x304>)
 8000664:	68db      	ldr	r3, [r3, #12]
 8000666:	687a      	ldr	r2, [r7, #4]
 8000668:	7912      	ldrb	r2, [r2, #4]
 800066a:	4611      	mov	r1, r2
 800066c:	2201      	movs	r2, #1
 800066e:	408a      	lsls	r2, r1
 8000670:	43d2      	mvns	r2, r2
 8000672:	4611      	mov	r1, r2
 8000674:	4a01      	ldr	r2, [pc, #4]	; (800067c <GPIO_Init+0x304>)
 8000676:	400b      	ands	r3, r1
 8000678:	60d3      	str	r3, [r2, #12]
 800067a:	e032      	b.n	80006e2 <GPIO_Init+0x36a>
 800067c:	40013c00 	.word	0x40013c00
 8000680:	40020000 	.word	0x40020000
 8000684:	40020400 	.word	0x40020400
 8000688:	40020800 	.word	0x40020800
 800068c:	40020c00 	.word	0x40020c00
 8000690:	40021000 	.word	0x40021000
 8000694:	40021400 	.word	0x40021400
 8000698:	40021800 	.word	0x40021800
 800069c:	40021c00 	.word	0x40021c00
 80006a0:	40022000 	.word	0x40022000
 80006a4:	40023800 	.word	0x40023800
 80006a8:	40013800 	.word	0x40013800
				}
				else if(pdata->GPIO_PIN_CONF.Mode == GPIO_MODE_IT_FRT)
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	f993 3005 	ldrsb.w	r3, [r3, #5]
 80006b2:	2b06      	cmp	r3, #6
 80006b4:	d115      	bne.n	80006e2 <GPIO_Init+0x36a>
				{
					EXTI->RTSR |= (1 << pdata->GPIO_PIN_CONF.Pin);
 80006b6:	4b84      	ldr	r3, [pc, #528]	; (80008c8 <GPIO_Init+0x550>)
 80006b8:	689b      	ldr	r3, [r3, #8]
 80006ba:	687a      	ldr	r2, [r7, #4]
 80006bc:	7912      	ldrb	r2, [r2, #4]
 80006be:	4611      	mov	r1, r2
 80006c0:	2201      	movs	r2, #1
 80006c2:	408a      	lsls	r2, r1
 80006c4:	4611      	mov	r1, r2
 80006c6:	4a80      	ldr	r2, [pc, #512]	; (80008c8 <GPIO_Init+0x550>)
 80006c8:	430b      	orrs	r3, r1
 80006ca:	6093      	str	r3, [r2, #8]
					EXTI->FTSR |= (1<< pdata->GPIO_PIN_CONF.Pin);
 80006cc:	4b7e      	ldr	r3, [pc, #504]	; (80008c8 <GPIO_Init+0x550>)
 80006ce:	68db      	ldr	r3, [r3, #12]
 80006d0:	687a      	ldr	r2, [r7, #4]
 80006d2:	7912      	ldrb	r2, [r2, #4]
 80006d4:	4611      	mov	r1, r2
 80006d6:	2201      	movs	r2, #1
 80006d8:	408a      	lsls	r2, r1
 80006da:	4611      	mov	r1, r2
 80006dc:	4a7a      	ldr	r2, [pc, #488]	; (80008c8 <GPIO_Init+0x550>)
 80006de:	430b      	orrs	r3, r1
 80006e0:	60d3      	str	r3, [r2, #12]
				}


				// 2. Setting the SYSCFG registers for choosing pin
				uint8_t portcode = Gpio_Port_Code(pdata->pGPIOx);
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	4a79      	ldr	r2, [pc, #484]	; (80008cc <GPIO_Init+0x554>)
 80006e8:	4293      	cmp	r3, r2
 80006ea:	d039      	beq.n	8000760 <GPIO_Init+0x3e8>
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	4a77      	ldr	r2, [pc, #476]	; (80008d0 <GPIO_Init+0x558>)
 80006f2:	4293      	cmp	r3, r2
 80006f4:	d032      	beq.n	800075c <GPIO_Init+0x3e4>
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	4a76      	ldr	r2, [pc, #472]	; (80008d4 <GPIO_Init+0x55c>)
 80006fc:	4293      	cmp	r3, r2
 80006fe:	d02b      	beq.n	8000758 <GPIO_Init+0x3e0>
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	681b      	ldr	r3, [r3, #0]
 8000704:	4a74      	ldr	r2, [pc, #464]	; (80008d8 <GPIO_Init+0x560>)
 8000706:	4293      	cmp	r3, r2
 8000708:	d024      	beq.n	8000754 <GPIO_Init+0x3dc>
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	681b      	ldr	r3, [r3, #0]
 800070e:	4a73      	ldr	r2, [pc, #460]	; (80008dc <GPIO_Init+0x564>)
 8000710:	4293      	cmp	r3, r2
 8000712:	d01d      	beq.n	8000750 <GPIO_Init+0x3d8>
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	4a71      	ldr	r2, [pc, #452]	; (80008e0 <GPIO_Init+0x568>)
 800071a:	4293      	cmp	r3, r2
 800071c:	d016      	beq.n	800074c <GPIO_Init+0x3d4>
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	4a70      	ldr	r2, [pc, #448]	; (80008e4 <GPIO_Init+0x56c>)
 8000724:	4293      	cmp	r3, r2
 8000726:	d00f      	beq.n	8000748 <GPIO_Init+0x3d0>
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	4a6e      	ldr	r2, [pc, #440]	; (80008e8 <GPIO_Init+0x570>)
 800072e:	4293      	cmp	r3, r2
 8000730:	d008      	beq.n	8000744 <GPIO_Init+0x3cc>
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	4a6d      	ldr	r2, [pc, #436]	; (80008ec <GPIO_Init+0x574>)
 8000738:	4293      	cmp	r3, r2
 800073a:	d101      	bne.n	8000740 <GPIO_Init+0x3c8>
 800073c:	2308      	movs	r3, #8
 800073e:	e010      	b.n	8000762 <GPIO_Init+0x3ea>
 8000740:	2300      	movs	r3, #0
 8000742:	e00e      	b.n	8000762 <GPIO_Init+0x3ea>
 8000744:	2307      	movs	r3, #7
 8000746:	e00c      	b.n	8000762 <GPIO_Init+0x3ea>
 8000748:	2306      	movs	r3, #6
 800074a:	e00a      	b.n	8000762 <GPIO_Init+0x3ea>
 800074c:	2305      	movs	r3, #5
 800074e:	e008      	b.n	8000762 <GPIO_Init+0x3ea>
 8000750:	2304      	movs	r3, #4
 8000752:	e006      	b.n	8000762 <GPIO_Init+0x3ea>
 8000754:	2303      	movs	r3, #3
 8000756:	e004      	b.n	8000762 <GPIO_Init+0x3ea>
 8000758:	2302      	movs	r3, #2
 800075a:	e002      	b.n	8000762 <GPIO_Init+0x3ea>
 800075c:	2301      	movs	r3, #1
 800075e:	e000      	b.n	8000762 <GPIO_Init+0x3ea>
 8000760:	2300      	movs	r3, #0
 8000762:	73fb      	strb	r3, [r7, #15]
				SYSCFG_CLK_EN();
 8000764:	4b62      	ldr	r3, [pc, #392]	; (80008f0 <GPIO_Init+0x578>)
 8000766:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000768:	4a61      	ldr	r2, [pc, #388]	; (80008f0 <GPIO_Init+0x578>)
 800076a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800076e:	6453      	str	r3, [r2, #68]	; 0x44
				SYSCFG->EXTICR[((pdata->GPIO_PIN_CONF.Pin)/4)] &= ~(0xF << (4 * ((pdata->GPIO_PIN_CONF.Pin)% 4)));
 8000770:	4a60      	ldr	r2, [pc, #384]	; (80008f4 <GPIO_Init+0x57c>)
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	791b      	ldrb	r3, [r3, #4]
 8000776:	089b      	lsrs	r3, r3, #2
 8000778:	b2d8      	uxtb	r0, r3
 800077a:	4603      	mov	r3, r0
 800077c:	3302      	adds	r3, #2
 800077e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000782:	687a      	ldr	r2, [r7, #4]
 8000784:	7912      	ldrb	r2, [r2, #4]
 8000786:	f002 0203 	and.w	r2, r2, #3
 800078a:	0092      	lsls	r2, r2, #2
 800078c:	210f      	movs	r1, #15
 800078e:	fa01 f202 	lsl.w	r2, r1, r2
 8000792:	43d2      	mvns	r2, r2
 8000794:	4957      	ldr	r1, [pc, #348]	; (80008f4 <GPIO_Init+0x57c>)
 8000796:	401a      	ands	r2, r3
 8000798:	1c83      	adds	r3, r0, #2
 800079a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				SYSCFG->EXTICR[((pdata->GPIO_PIN_CONF.Pin)/4)] |= (portcode <<(4 * (pdata->GPIO_PIN_CONF.Pin % 4)));
 800079e:	4a55      	ldr	r2, [pc, #340]	; (80008f4 <GPIO_Init+0x57c>)
 80007a0:	687b      	ldr	r3, [r7, #4]
 80007a2:	791b      	ldrb	r3, [r3, #4]
 80007a4:	089b      	lsrs	r3, r3, #2
 80007a6:	b2d8      	uxtb	r0, r3
 80007a8:	4603      	mov	r3, r0
 80007aa:	3302      	adds	r3, #2
 80007ac:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007b0:	7bf9      	ldrb	r1, [r7, #15]
 80007b2:	687a      	ldr	r2, [r7, #4]
 80007b4:	7912      	ldrb	r2, [r2, #4]
 80007b6:	f002 0203 	and.w	r2, r2, #3
 80007ba:	0092      	lsls	r2, r2, #2
 80007bc:	fa01 f202 	lsl.w	r2, r1, r2
 80007c0:	494c      	ldr	r1, [pc, #304]	; (80008f4 <GPIO_Init+0x57c>)
 80007c2:	431a      	orrs	r2, r3
 80007c4:	1c83      	adds	r3, r0, #2
 80007c6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

				// 3. Enabling EXTI block for interrupt mode
				EXTI->IMR |= (1<<pdata->GPIO_PIN_CONF.Pin);
 80007ca:	4b3f      	ldr	r3, [pc, #252]	; (80008c8 <GPIO_Init+0x550>)
 80007cc:	681b      	ldr	r3, [r3, #0]
 80007ce:	687a      	ldr	r2, [r7, #4]
 80007d0:	7912      	ldrb	r2, [r2, #4]
 80007d2:	4611      	mov	r1, r2
 80007d4:	2201      	movs	r2, #1
 80007d6:	408a      	lsls	r2, r1
 80007d8:	4611      	mov	r1, r2
 80007da:	4a3b      	ldr	r2, [pc, #236]	; (80008c8 <GPIO_Init+0x550>)
 80007dc:	430b      	orrs	r3, r1
 80007de:	6013      	str	r3, [r2, #0]

	}

	// configuring speed of pin

	pdata->pGPIOx->OSPEEDR &= ~(0x3<< pdata->GPIO_PIN_CONF.Pin);
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	689a      	ldr	r2, [r3, #8]
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	791b      	ldrb	r3, [r3, #4]
 80007ea:	4619      	mov	r1, r3
 80007ec:	2303      	movs	r3, #3
 80007ee:	408b      	lsls	r3, r1
 80007f0:	43db      	mvns	r3, r3
 80007f2:	4619      	mov	r1, r3
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	400a      	ands	r2, r1
 80007fa:	609a      	str	r2, [r3, #8]
	pdata->pGPIOx->OSPEEDR |= (pdata->GPIO_PIN_CONF.Speed << (2 * pdata->GPIO_PIN_CONF.Pin));
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	681b      	ldr	r3, [r3, #0]
 8000800:	689a      	ldr	r2, [r3, #8]
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	79db      	ldrb	r3, [r3, #7]
 8000806:	4619      	mov	r1, r3
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	791b      	ldrb	r3, [r3, #4]
 800080c:	005b      	lsls	r3, r3, #1
 800080e:	fa01 f303 	lsl.w	r3, r1, r3
 8000812:	4619      	mov	r1, r3
 8000814:	687b      	ldr	r3, [r7, #4]
 8000816:	681b      	ldr	r3, [r3, #0]
 8000818:	430a      	orrs	r2, r1
 800081a:	609a      	str	r2, [r3, #8]


	// configuring pull of pin
	pdata->pGPIOx->PUPDR &= ~(0x3 <<pdata->GPIO_PIN_CONF.Pin);
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	681b      	ldr	r3, [r3, #0]
 8000820:	68da      	ldr	r2, [r3, #12]
 8000822:	687b      	ldr	r3, [r7, #4]
 8000824:	791b      	ldrb	r3, [r3, #4]
 8000826:	4619      	mov	r1, r3
 8000828:	2303      	movs	r3, #3
 800082a:	408b      	lsls	r3, r1
 800082c:	43db      	mvns	r3, r3
 800082e:	4619      	mov	r1, r3
 8000830:	687b      	ldr	r3, [r7, #4]
 8000832:	681b      	ldr	r3, [r3, #0]
 8000834:	400a      	ands	r2, r1
 8000836:	60da      	str	r2, [r3, #12]
	pdata->pGPIOx->PUPDR |= (pdata->GPIO_PIN_CONF.Pull << (2 * pdata->GPIO_PIN_CONF.Pin));
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	68da      	ldr	r2, [r3, #12]
 800083e:	687b      	ldr	r3, [r7, #4]
 8000840:	799b      	ldrb	r3, [r3, #6]
 8000842:	4619      	mov	r1, r3
 8000844:	687b      	ldr	r3, [r7, #4]
 8000846:	791b      	ldrb	r3, [r3, #4]
 8000848:	005b      	lsls	r3, r3, #1
 800084a:	fa01 f303 	lsl.w	r3, r1, r3
 800084e:	4619      	mov	r1, r3
 8000850:	687b      	ldr	r3, [r7, #4]
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	430a      	orrs	r2, r1
 8000856:	60da      	str	r2, [r3, #12]


	// configuring alternate function of pin
	uint8_t temp1,temp2;
	temp1=(pdata->GPIO_PIN_CONF.Pin)/8;
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	791b      	ldrb	r3, [r3, #4]
 800085c:	08db      	lsrs	r3, r3, #3
 800085e:	737b      	strb	r3, [r7, #13]
	temp2=(pdata->GPIO_PIN_CONF.Pin)%8;
 8000860:	687b      	ldr	r3, [r7, #4]
 8000862:	791b      	ldrb	r3, [r3, #4]
 8000864:	f003 0307 	and.w	r3, r3, #7
 8000868:	733b      	strb	r3, [r7, #12]
	pdata->pGPIOx->AFR[temp1] &= ~(0xF <<(4 * temp2));
 800086a:	687b      	ldr	r3, [r7, #4]
 800086c:	681b      	ldr	r3, [r3, #0]
 800086e:	7b7a      	ldrb	r2, [r7, #13]
 8000870:	3208      	adds	r2, #8
 8000872:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000876:	7b3b      	ldrb	r3, [r7, #12]
 8000878:	009b      	lsls	r3, r3, #2
 800087a:	220f      	movs	r2, #15
 800087c:	fa02 f303 	lsl.w	r3, r2, r3
 8000880:	43db      	mvns	r3, r3
 8000882:	4618      	mov	r0, r3
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	681b      	ldr	r3, [r3, #0]
 8000888:	7b7a      	ldrb	r2, [r7, #13]
 800088a:	4001      	ands	r1, r0
 800088c:	3208      	adds	r2, #8
 800088e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	pdata->pGPIOx->AFR[temp1] |=  (pdata->GPIO_PIN_CONF.Alternate <<(4 * temp2));
 8000892:	687b      	ldr	r3, [r7, #4]
 8000894:	681b      	ldr	r3, [r3, #0]
 8000896:	7b7a      	ldrb	r2, [r7, #13]
 8000898:	3208      	adds	r2, #8
 800089a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800089e:	687b      	ldr	r3, [r7, #4]
 80008a0:	7a1b      	ldrb	r3, [r3, #8]
 80008a2:	461a      	mov	r2, r3
 80008a4:	7b3b      	ldrb	r3, [r7, #12]
 80008a6:	009b      	lsls	r3, r3, #2
 80008a8:	fa02 f303 	lsl.w	r3, r2, r3
 80008ac:	4618      	mov	r0, r3
 80008ae:	687b      	ldr	r3, [r7, #4]
 80008b0:	681b      	ldr	r3, [r3, #0]
 80008b2:	7b7a      	ldrb	r2, [r7, #13]
 80008b4:	4301      	orrs	r1, r0
 80008b6:	3208      	adds	r2, #8
 80008b8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

}
 80008bc:	bf00      	nop
 80008be:	3714      	adds	r7, #20
 80008c0:	46bd      	mov	sp, r7
 80008c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008c6:	4770      	bx	lr
 80008c8:	40013c00 	.word	0x40013c00
 80008cc:	40020000 	.word	0x40020000
 80008d0:	40020400 	.word	0x40020400
 80008d4:	40020800 	.word	0x40020800
 80008d8:	40020c00 	.word	0x40020c00
 80008dc:	40021000 	.word	0x40021000
 80008e0:	40021400 	.word	0x40021400
 80008e4:	40021800 	.word	0x40021800
 80008e8:	40021c00 	.word	0x40021c00
 80008ec:	40022000 	.word	0x40022000
 80008f0:	40023800 	.word	0x40023800
 80008f4:	40013800 	.word	0x40013800

080008f8 <GPIO_Toggle_PIN>:
 *
 * @Note
 */

void GPIO_Toggle_PIN(GPIO_REG_STR *pdata , uint8_t PinNum)
{
 80008f8:	b480      	push	{r7}
 80008fa:	b083      	sub	sp, #12
 80008fc:	af00      	add	r7, sp, #0
 80008fe:	6078      	str	r0, [r7, #4]
 8000900:	460b      	mov	r3, r1
 8000902:	70fb      	strb	r3, [r7, #3]
	pdata->ODR ^=(1<<PinNum);
 8000904:	687b      	ldr	r3, [r7, #4]
 8000906:	695b      	ldr	r3, [r3, #20]
 8000908:	78fa      	ldrb	r2, [r7, #3]
 800090a:	2101      	movs	r1, #1
 800090c:	fa01 f202 	lsl.w	r2, r1, r2
 8000910:	405a      	eors	r2, r3
 8000912:	687b      	ldr	r3, [r7, #4]
 8000914:	615a      	str	r2, [r3, #20]
}
 8000916:	bf00      	nop
 8000918:	370c      	adds	r7, #12
 800091a:	46bd      	mov	sp, r7
 800091c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000920:	4770      	bx	lr
	...

08000924 <Event_Pending>:
 * @Note							-this generate interrupt request on which EXTI line that configures in GPIO_Init func
 */


uint8_t Event_Pending(uint8_t PinNum)
{
 8000924:	b480      	push	{r7}
 8000926:	b085      	sub	sp, #20
 8000928:	af00      	add	r7, sp, #0
 800092a:	4603      	mov	r3, r0
 800092c:	71fb      	strb	r3, [r7, #7]
	uint8_t Event_Pending = (EXTI->PR >> PinNum)&(0b0000000000000001);
 800092e:	4b08      	ldr	r3, [pc, #32]	; (8000950 <Event_Pending+0x2c>)
 8000930:	695a      	ldr	r2, [r3, #20]
 8000932:	79fb      	ldrb	r3, [r7, #7]
 8000934:	fa22 f303 	lsr.w	r3, r2, r3
 8000938:	b2db      	uxtb	r3, r3
 800093a:	f003 0301 	and.w	r3, r3, #1
 800093e:	73fb      	strb	r3, [r7, #15]
	//GPIO_IRQHandler(PinNum);
	return Event_Pending;
 8000940:	7bfb      	ldrb	r3, [r7, #15]
}
 8000942:	4618      	mov	r0, r3
 8000944:	3714      	adds	r7, #20
 8000946:	46bd      	mov	sp, r7
 8000948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800094c:	4770      	bx	lr
 800094e:	bf00      	nop
 8000950:	40013c00 	.word	0x40013c00

08000954 <__libc_init_array>:
 8000954:	b570      	push	{r4, r5, r6, lr}
 8000956:	4d0d      	ldr	r5, [pc, #52]	; (800098c <__libc_init_array+0x38>)
 8000958:	4c0d      	ldr	r4, [pc, #52]	; (8000990 <__libc_init_array+0x3c>)
 800095a:	1b64      	subs	r4, r4, r5
 800095c:	10a4      	asrs	r4, r4, #2
 800095e:	2600      	movs	r6, #0
 8000960:	42a6      	cmp	r6, r4
 8000962:	d109      	bne.n	8000978 <__libc_init_array+0x24>
 8000964:	4d0b      	ldr	r5, [pc, #44]	; (8000994 <__libc_init_array+0x40>)
 8000966:	4c0c      	ldr	r4, [pc, #48]	; (8000998 <__libc_init_array+0x44>)
 8000968:	f000 f820 	bl	80009ac <_init>
 800096c:	1b64      	subs	r4, r4, r5
 800096e:	10a4      	asrs	r4, r4, #2
 8000970:	2600      	movs	r6, #0
 8000972:	42a6      	cmp	r6, r4
 8000974:	d105      	bne.n	8000982 <__libc_init_array+0x2e>
 8000976:	bd70      	pop	{r4, r5, r6, pc}
 8000978:	f855 3b04 	ldr.w	r3, [r5], #4
 800097c:	4798      	blx	r3
 800097e:	3601      	adds	r6, #1
 8000980:	e7ee      	b.n	8000960 <__libc_init_array+0xc>
 8000982:	f855 3b04 	ldr.w	r3, [r5], #4
 8000986:	4798      	blx	r3
 8000988:	3601      	adds	r6, #1
 800098a:	e7f2      	b.n	8000972 <__libc_init_array+0x1e>
 800098c:	080009c4 	.word	0x080009c4
 8000990:	080009c4 	.word	0x080009c4
 8000994:	080009c4 	.word	0x080009c4
 8000998:	080009c8 	.word	0x080009c8

0800099c <memset>:
 800099c:	4402      	add	r2, r0
 800099e:	4603      	mov	r3, r0
 80009a0:	4293      	cmp	r3, r2
 80009a2:	d100      	bne.n	80009a6 <memset+0xa>
 80009a4:	4770      	bx	lr
 80009a6:	f803 1b01 	strb.w	r1, [r3], #1
 80009aa:	e7f9      	b.n	80009a0 <memset+0x4>

080009ac <_init>:
 80009ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ae:	bf00      	nop
 80009b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009b2:	bc08      	pop	{r3}
 80009b4:	469e      	mov	lr, r3
 80009b6:	4770      	bx	lr

080009b8 <_fini>:
 80009b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ba:	bf00      	nop
 80009bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009be:	bc08      	pop	{r3}
 80009c0:	469e      	mov	lr, r3
 80009c2:	4770      	bx	lr
